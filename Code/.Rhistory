}
A <- matrix(0L,nrow = p, ncol = col.A)      #Denote A as Powerset of {1,...,p}
k <- choose(p,1)
l <- 1
for (i in 1:p) {
A[1:i,l:k] <- combn(Index,i)              #combn spits out all combinations of i elements in Index
k <-k + choose(p,i+1)
l <- l + choose(p,i)
}
}
#Number of Observations
n <- length(y)
#Vector of Likelihood values for different Models
AIC <- c()
for (i in 1:A[1,]) {
k <- length(A[,i])
X.model <- X[,A[,i]]
#Expectation observation i
mu <- X.model%*%solve(t(X.model)%*%X.model)%*%t(X.model)%*%y
error <- sum((y-mu)^2)
#Varianz
var <- 1/n*error
LogL <- -n/2*log(2*pi)-n/2*log(var)-1/(2*var)*error
AIC[i] <- 2*k-2*LogL
}
TheChosenOne <- which.min(AIC)
return(A[,TheChosenOne])
}
##Generate some data for regression
n <- 50
##Data for True Regression Model
p.True<- 4                   #Number of True regressors
x_1 <- rep(1,n)         #Intercept
x_2 <- rnorm(n,2,1)
x_3 <- rnorm(n,0,1)
x_4 <- rnorm(n,5,2)
eps <- rnorm(n,0,1)     #Errorterm
##Generate some unecessary extra data
x_5 <- rnorm(n,4,1)
x_6 <- rnorm(n,2,2)
x_7 <- rnorm(n,1,3)
x_8 <- rnorm(n,3,7)
x_9 <- rnorm(n,0,1)
x_10 <- rnorm(n,5,5)
beta.vec <- c(1.5,0.5,3,2,rep(0,6))
X <- cbind(x_1,x_2,x_3,x_4,x_5,x_6,x_7,x_8,x_9,x_10)
##Genereta dependent variables acording to the Above statet Model
y <- X%*%beta.vec + eps    #True Model
Akaike(y,X)
##Akaike Information Criterion
Akaike <- function(y,X,Alpha = NULL){
##Change some Variable names to keep the code shorter
A <- Alpha
##Number of Possible Regressors
p <- length(X[1,])
##Number of Observations
n <- length(y)
##Set of possible Models
if(is.null(A)){
Index <- seq(1,p,1)    #Creats the set {1,...,p} from which we want to generate the Powerset
col.A <- 0                                  #Denotes the number of Possible Models out of {1,...,p}
for (i in 1:p) {
col.A <- col.A + choose(p,i)
}
A <- matrix(0L,nrow = p, ncol = col.A)      #Denote A as Powerset of {1,...,p}
k <- choose(p,1)
l <- 1
for (i in 1:p) {
A[1:i,l:k] <- combn(Index,i)              #combn spits out all combinations of i elements in Index
k <-k + choose(p,i+1)
l <- l + choose(p,i)
}
}
##Vector of Likelihood values for different Models
AIC <- c()
for (i in 1:A[1,]) {
##Number of regressors
k <- length(A[,i])
##Data for the choosen Model
X.model <- X[,A[,i]]
##Expectation observation i
mu <- X.model%*%solve(t(X.model)%*%X.model)%*%t(X.model)%*%y
error <- sum((y-mu)^2)
##Varianz
var <- 1/n*error
##Calculate Log Likelihood value
LogL <- -n/2*log(2*pi)-n/2*log(var)-1/(2*var)*error
##Calculate Akaike Criterion
AIC[i] <- 2*k-2*LogL
}
TheChosenOne <- which.min(AIC)
return(A[,TheChosenOne])
}
Akaike(y,X)
##Number of Possible Regressors
p <- length(X[1,])
##Number of Observations
n <- length(y)
Index <- seq(1,p,1)    #Creats the set {1,...,p} from which we want to generate the Powerset
col.A <- 0                                  #Denotes the number of Possible Models out of {1,...,p}
for (i in 1:p) {
col.A <- col.A + choose(p,i)
}
A <- matrix(0L,nrow = p, ncol = col.A)      #Denote A as Powerset of {1,...,p}
k <- choose(p,1)
l <- 1
for (i in 1:p) {
A[1:i,l:k] <- combn(Index,i)              #combn spits out all combinations of i elements in Index
k <-k + choose(p,i+1)
l <- l + choose(p,i)
}
A[1,]
A[,1]
##Akaike Information Criterion
Akaike <- function(y,X,Alpha = NULL){
##Change some Variable names to keep the code shorter
A <- Alpha
##Number of Possible Regressors
p <- length(X[1,])
##Number of Observations
n <- length(y)
##Set of possible Models
if(is.null(A)){
Index <- seq(1,p,1)    #Creats the set {1,...,p} from which we want to generate the Powerset
col.A <- 0                                  #Denotes the number of Possible Models out of {1,...,p}
for (i in 1:p) {
col.A <- col.A + choose(p,i)
}
A <- matrix(0L,nrow = p, ncol = col.A)      #Denote A as Powerset of {1,...,p}
k <- choose(p,1)
l <- 1
for (i in 1:p) {
A[1:i,l:k] <- combn(Index,i)              #combn spits out all combinations of i elements in Index
k <-k + choose(p,i+1)
l <- l + choose(p,i)
}
}
##Vector of Likelihood values for different Models
AIC <- c()
for (i in 1:length(A[1,])) {
##Number of regressors
k <- length(A[,i])
##Data for the choosen Model
X.model <- X[,A[,i]]
##Expectation observation i
mu <- X.model%*%solve(t(X.model)%*%X.model)%*%t(X.model)%*%y
error <- sum((y-mu)^2)
##Varianz
var <- 1/n*error
##Calculate Log Likelihood value
LogL <- -n/2*log(2*pi)-n/2*log(var)-1/(2*var)*error
##Calculate Akaike Criterion
AIC[i] <- 2*k-2*LogL
}
TheChosenOne <- which.min(AIC)
return(A[,TheChosenOne])
}
Akaike(y,X)
Akaike(y,X)
##Akaike Information Criterion
Akaike <- function(y,X,Alpha = NULL){
##Change some Variable names to keep the code shorter
A <- Alpha
##Number of Possible Regressors
p <- length(X[1,])
##Number of Observations
n <- length(y)
##Set of possible Models
if(is.null(A)){
Index <- seq(1,p,1)    #Creats the set {1,...,p} from which we want to generate the Powerset
col.A <- 0                                  #Denotes the number of Possible Models out of {1,...,p}
for (i in 1:p) {
col.A <- col.A + choose(p,i)
}
A <- matrix(0L,nrow = p, ncol = col.A)      #Denote A as Powerset of {1,...,p}
k <- choose(p,1)
l <- 1
for (i in 1:p) {
A[1:i,l:k] <- combn(Index,i)              #combn spits out all combinations of i elements in Index
k <-k + choose(p,i+1)
l <- l + choose(p,i)
}
}
##Vector of Likelihood values for different Models
AIC <- c()
for (i in 1:length(A[1,])) {
##Number of regressors
k <- length(A[,i])
##Data for the choosen Model
X.model <- X[,A[,i]]
##Expectation observation i
mu <- X.model%*%solve(t(X.model)%*%X.model)%*%t(X.model)%*%y
error <- sum((y-mu)^2)
##Varianz
var <- 1/n*error
##Calculate Log Likelihood value
LogL <- -n/2*log(2*pi)-n/2*log(var)-1/(2*var)*error
##Calculate Akaike Criterion
AIC[i] <- 2*k-2*LogL
}
TheChosenOne <- which.min(AIC)
return(A[,TheChosenOne])
}
Akaike(y,X)
Akaike(y,X)
Index <- seq(1,p,1)    #Creats the set {1,...,p} from which we want to generate the Powerset
col.A <- 0                                  #Denotes the number of Possible Models out of {1,...,p}
for (i in 1:p) {
col.A <- col.A + choose(p,i)
}
A <- matrix(0L,nrow = p, ncol = col.A)      #Denote A as Powerset of {1,...,p}
k <- choose(p,1)
l <- 1
for (i in 1:p) {
A[1:i,l:k] <- combn(Index,i)              #combn spits out all combinations of i elements in Index
k <-k + choose(p,i+1)
l <- l + choose(p,i)
}
##Set of possible Models
if(is.null(A)){
Index <- seq(1,p,1)    #Creats the set {1,...,p} from which we want to generate the Powerset
col.A <- 0                                  #Denotes the number of Possible Models out of {1,...,p}
for (i in 1:p) {
col.A <- col.A + choose(p,i)
}
A <- matrix(0L,nrow = p, ncol = col.A)      #Denote A as Powerset of {1,...,p}
k <- choose(p,1)
l <- 1
for (i in 1:p) {
A[1:i,l:k] <- combn(Index,i)              #combn spits out all combinations of i elements in Index
k <-k + choose(p,i+1)
l <- l + choose(p,i)
}
}
##Vector of Likelihood values for different Models
AIC <- c()
for (i in 1:length(A[1,])) {
##Number of regressors
k <- length(A[,i])
##Data for the choosen Model
X.model <- X[,A[,i]]
##Expectation observation i
mu <- X.model%*%solve(t(X.model)%*%X.model)%*%t(X.model)%*%y
error <- sum((y-mu)^2)
##Varianz
var <- 1/n*error
##Calculate Log Likelihood value
LogL <- -n/2*log(2*pi)-n/2*log(var)-1/(2*var)*error
##Calculate Akaike Criterion
AIC[i] <- 2*k-2*LogL
}
AIC
which.min(AIC)
AIC[1023]
n=500
x_1 <- rep(1,n)         #Intercept
x_2 <- rnorm(n,2,1)
x_3 <- rnorm(n,0,1)
x_4 <- rnorm(n,5,2)
eps <- rnorm(n,0,1)     #Errorterm
##Generate some unecessary extra data
x_5 <- rnorm(n,4,1)
x_6 <- rnorm(n,2,2)
x_7 <- rnorm(n,1,3)
x_8 <- rnorm(n,3,7)
x_9 <- rnorm(n,0,1)
x_10 <- rnorm(n,5,5)
beta.vec <- c(1.5,0.5,3,2,rep(0,6))
X <- cbind(x_1,x_2,x_3,x_4,x_5,x_6,x_7,x_8,x_9,x_10)
##Genereta dependent variables acording to the Above statet Model
y <- X%*%beta.vec + eps    #True Model
Akaike(y,X)
n <- 200
##Data for True Regression Model
p.True<- 4                   #Number of True regressors
x_1 <- rep(1,n)         #Intercept
x_2 <- rnorm(n,2,1)
x_3 <- rnorm(n,0,1)
x_4 <- rnorm(n,5,2)
eps <- rnorm(n,0,1)     #Errorterm
##Generate some unecessary extra data
x_5 <- rnorm(n,4,1)
x_6 <- rnorm(n,2,2)
x_7 <- rnorm(n,1,3)
x_8 <- rnorm(n,3,7)
x_9 <- rnorm(n,0,1)
x_10 <- rnorm(n,5,5)
beta.vec <- c(1.5,0.5,3,2,rep(0,6))
X <- cbind(x_1,x_2,x_3,x_4,x_5,x_6,x_7,x_8,x_9,x_10)
##Genereta dependent variables acording to the Above statet Model
y <- X%*%beta.vec + eps    #True Model
##Number of Regressors
p <- length(X[1,])
##Akaike Information Criterion
AIC <- function(y,X,Alpha = NULL){
##Change some Variable names to keep the code shorter
A <- Alpha
##Number of Possible Regressors
p <- length(X[1,])
##Number of Observations
n <- length(y)
##Set of possible Models
if(is.null(A)){
Index <- seq(1,p,1)    #Creats the set {1,...,p} from which we want to generate the Powerset
col.A <- 0                                  #Denotes the number of Possible Models out of {1,...,p}
for (i in 1:p) {
col.A <- col.A + choose(p,i)
}
A <- matrix(0L,nrow = p, ncol = col.A)      #Denote A as Powerset of {1,...,p}
k <- choose(p,1)
l <- 1
for (i in 1:p) {
A[1:i,l:k] <- combn(Index,i)              #combn spits out all combinations of i elements in Index
k <-k + choose(p,i+1)
l <- l + choose(p,i)
}
}
##Vector of Likelihood values for different Models
AIC <- c()
for (i in 1:length(A[1,])) {
##Number of regressors
k <- length(A[,i])
##Data for the choosen Model
X.model <- X[,A[,i]]
##Expectation observation i
mu <- X.model%*%solve(t(X.model)%*%X.model)%*%t(X.model)%*%y
error <- sum((y-mu)^2)
##Varianz
var <- 1/n*error
##Calculate Log Likelihood value
LogL <- -n/2*log(2*pi)-n/2*log(var)-1/(2*var)*error
##Calculate Akaike Criterion
AIC[i] <- 2*k-2*LogL
}
TheChosenOne <- which.min(AIC)
return(A[,TheChosenOne])
}
AIC(y,X)
Index <- seq(1,p,1)    #Creats the set {1,...,p} from which we want to generate the Powerset
col.A <- 0                                  #Denotes the number of Possible Models out of {1,...,p}
for (i in 1:p) {
col.A <- col.A + choose(p,i)
}
A <- matrix(0L,nrow = p, ncol = col.A)      #Denote A as Powerset of {1,...,p}
k <- choose(p,1)
l <- 1
for (i in 1:p) {
A[1:i,l:k] <- combn(Index,i)              #combn spits out all combinations of i elements in Index
k <-k + choose(p,i+1)
l <- l + choose(p,i)
}
5/2*3-(5/2)*3
A[,1] != 0
sum(A[,1] != 0)
##Akaike Information Criterion
AIC <- function(y,X,Alpha = NULL){
##Change some Variable names to keep the code shorter
A <- Alpha
##Number of Observations
n <- length(y)
##Set of possible Models
if(is.null(A)){
##Number of Possible Regressors
p <- length(X[1,])
Index <- seq(1,p,1)    #Creats the set {1,...,p} from which we want to generate the Powerset
col.A <- 0                                  #Denotes the number of Possible Models out of {1,...,p}
for (i in 1:p) {
col.A <- col.A + choose(p,i)
}
A <- matrix(0L,nrow = p, ncol = col.A)      #Denote A as Powerset of {1,...,p}
k <- choose(p,1)
l <- 1
for (i in 1:p) {
A[1:i,l:k] <- combn(Index,i)              #combn spits out all combinations of i elements in Index
k <-k + choose(p,i+1)
l <- l + choose(p,i)
}
}
##Vector of Likelihood values for different Models
AIC <- c()
for (i in 1:length(A[1,])) {
##Number of regressors
k <- sum(A[,i] != 0)
##Data for the choosen Model
X.model <- X[,A[,i]]
##Expectation observation i
mu <- X.model%*%solve(t(X.model)%*%X.model)%*%t(X.model)%*%y
error <- sum((y-mu)^2)
##Varianz
var <- 1/n*error
##Calculate Log Likelihood value
LogL <- -n/2*log(2*pi)-n/2*log(var)-1/(2*var)*error
##Calculate Akaike Criterion
AIC[i] <- 2*k-2*LogL
}
TheChosenOne <- which.min(AIC)
return(A[,TheChosenOne])
}
AIC(y,X)
##Akaike Information Criterion
AIC <- function(y,X,Alpha = NULL, Criterion = AIC){
##Change some Variable names to keep the code shorter
A <- Alpha
##Number of Observations
n <- length(y)
##Set of possible Models
if(is.null(A)){
##Number of Possible Regressors
p <- length(X[1,])
Index <- seq(1,p,1)    #Creats the set {1,...,p} from which we want to generate the Powerset
col.A <- 0                                  #Denotes the number of Possible Models out of {1,...,p}
for (i in 1:p) {
col.A <- col.A + choose(p,i)
}
A <- matrix(0L,nrow = p, ncol = col.A)      #Denote A as Powerset of {1,...,p}
k <- choose(p,1)
l <- 1
for (i in 1:p) {
A[1:i,l:k] <- combn(Index,i)              #combn spits out all combinations of i elements in Index
k <-k + choose(p,i+1)
l <- l + choose(p,i)
}
}
##Vector of Likelihood values for different Models
InfoCriterion <- c()
for (i in 1:length(A[1,])) {
##Number of regressors
k <- sum(A[,i] != 0)
##Data for the choosen Model
X.model <- X[,A[,i]]
##Expectation observation i
mu <- X.model%*%solve(t(X.model)%*%X.model)%*%t(X.model)%*%y
error <- sum((y-mu)^2)
##Varianz
var <- 1/n*error
##Calculate Log Likelihood value
LogL <- -n/2*log(2*pi)-n/2*log(var)-1/(2*var)*error
##Calculate Information Criterion
##For AIC
if(Criterion = AIC){
InfoCriterion[i] <- 2*k-2*LogL
}
##For BIC
if(Criterion = BIC){
InfoCriterion[i] <- log(n)*k - 2*LogL
}
}
#Choose the Model which minimze the Information Criterion
TheChosenOne <- which.min(InfoCriterion)
return(A[,TheChosenOne])
}
f <- "Hallo"
f = "Hallo"
f == "Hallo"
f <- Hallo
##Akaike Information Criterion
AIC <- function(y,X,Alpha = NULL, Criterion = "AIC"){
##Change some Variable names to keep the code shorter
A <- Alpha
##Number of Observations
n <- length(y)
##Set of possible Models
if(is.null(A)){
##Number of Possible Regressors
p <- length(X[1,])
Index <- seq(1,p,1)    #Creats the set {1,...,p} from which we want to generate the Powerset
col.A <- 0                                  #Denotes the number of Possible Models out of {1,...,p}
for (i in 1:p) {
col.A <- col.A + choose(p,i)
}
A <- matrix(0L,nrow = p, ncol = col.A)      #Denote A as Powerset of {1,...,p}
k <- choose(p,1)
l <- 1
for (i in 1:p) {
A[1:i,l:k] <- combn(Index,i)              #combn spits out all combinations of i elements in Index
k <-k + choose(p,i+1)
l <- l + choose(p,i)
}
}
##Vector of Likelihood values for different Models
InfoCriterion <- c()
for (i in 1:length(A[1,])) {
##Number of regressors
k <- sum(A[,i] != 0)
##Data for the choosen Model
X.model <- X[,A[,i]]
##Expectation observation i
mu <- X.model%*%solve(t(X.model)%*%X.model)%*%t(X.model)%*%y
error <- sum((y-mu)^2)
##Varianz
var <- 1/n*error
##Calculate Log Likelihood value
LogL <- -n/2*log(2*pi)-n/2*log(var)-1/(2*var)*error
##Calculate Information Criterion
##For AIC
if(Criterion == "AIC"){
InfoCriterion[i] <- 2*k-2*LogL
}
##For BIC
if(Criterion == "BIC"){
InfoCriterion[i] <- log(n)*k - 2*LogL
}
}
#Choose the Model which minimze the Information Criterion
TheChosenOne <- which.min(InfoCriterion)
return(A[,TheChosenOne])
}
AIC(y,X)
AIC(y,X,"BIC")
AIC(y,X,"BIC")
AIC(y,X)
AIC(y,X,Criterion = "BIC")
